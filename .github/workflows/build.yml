name: Build

on:
  workflow_dispatch:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]


jobs:
  build:
    defaults:
      run:
        shell: pwsh

    name: ${{ matrix.os }}-${{ github.workflow }}
    environment: build
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: "irsdkcpp-build"

    strategy:
      fail-fast: true
      matrix:
        os: [  windows-latest ]
        include:
          - os: windows-latest
            triplet: x64-windows-static
            vcpkgCommitId: '47bf3d1ac192b3fa0feb6e6ac9c845de179eebe9'
    env:
      # Path to the solution file relative to the root of the project.
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      VCPKG_ROOT: "${{ github.workspace }}/vcpkg"
      VCPKG_DEFAULT_BINARY_CACHE: "C:/vcpkg_installed"
      VCPKG_MAX_CONCURRENCY: 4

      CMAKE_BUILD_PARALLEL_LEVEL: 4

      CHOCO_CACHE: "C:/Users/runneradmin/.choco-cache"

      BUILD_PLATFORM: x64
      BUILD_CONFIGURATION: Release

    steps:

      - uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Create cache directory
        run: mkdir "${{ env.CHOCO_CACHE }}"

      - name: Cache Tools
        uses: actions/cache@v4
        with:
          path: |
            "${{ env.CHOCO_CACHE }}"
            "C:/Program Files/doxygen/bin"
          key: choco-${{ matrix.os }}


      - name: Set Choco cache path
        run: choco config set cacheLocation "${{ env.CHOCO_CACHE }}"

      - name: Install doxygen
        run: choco install doxygen.install


      - name: get-cmake
        uses: lukka/get-cmake@v3.31.5

      - name: Create vcpkg dirs
        run: |
          mkdir ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          # Just install vcpkg for now, do not install any ports in this step yet.
          runVcpkgInstall: false

          # Location of the vcpkg as submodule of the repository.
          vcpkgDirectory: '${{ env.VCPKG_ROOT }}'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: 'CMake Configure'
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'ninja-release'
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'

      - name: 'CMake Build'
        uses: lukka/run-cmake@v10
        with:
          buildPreset: 'ninja-release-build'
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'


      - name: Use Node v22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Dependencies
        working-directory: ${{github.workspace}}
        run: |
          yarn install

      - name: 'Release'
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{github.workspace}}/scripts
        run: |
          set -e
          node create-release-draft-version.mjs

